@using Skelbimu_sistema.ViewModels
@model ProductEditRequest

@{
    ViewData["Title"] = "Skelbimo redagavimas";

    string MapToLithuanian(string state)
    {
        switch (state)
        {
            case "Active":
                return "Aktyvus";
            case "Reserved":
                return "Rezervuotas";
            case "Closed":
                return "Uždarytas";
            case "Suspended":
                return "Suspenduotas";
            default:
                return state; // Return the original state if not found
        }
    }
}



<h2>Skelbimo redagavimas</h2>

@Html.ValidationSummary()

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="Name" class="control-label">Pavadinimas</label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Description" class="control-label">Aprašymas</label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group row">
        <label asp-for="StartDate" class="control-label col-md-2">Pradžios data:</label>
        <div class="col-md-10">
            <input asp-for="StartDate" class="form-control" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
            <span asp-validation-for="StartDate" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group row">
        <label asp-for="EndDate" class="control-label col-md-2">Pabaigos data:</label>
        <div class="col-md-10">
            @{
                DateTime nextMonth = DateTime.Now.AddMonths(1);
                string nextMonthString = $"{nextMonth.Year}-{nextMonth.Month:D2}-{nextMonth.Day:D2}";
            }
            <input asp-for="EndDate" class="form-control" type="date" value="@nextMonthString" />
            <span asp-validation-for="EndDate" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group">
        <label asp-for="Price" class="control-label">Kaina</label>
        <input asp-for="Price" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="ImageUrl" class="control-label">Nuotraukos URL</label>
        <input asp-for="ImageUrl" class="form-control" />
        <span asp-validation-for="ImageUrl" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Category" class="control-label">Kategorija</label>
        <select asp-for="Category" class="form-control">
            <option value="">Pasirinkite kategoriją</option>
            @foreach (var category in Enum.GetValues(typeof(Skelbimu_sistema.Models.Category)))
            {
                <option value="@category">@category</option>
            }
        </select>
        <span asp-validation-for="Category" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="State" class="control-label">Skelbimo būsena</label>
        <select asp-for="State" class="form-control" disabled="@(Model.State == ProductState.Suspended ? "disabled" : null)">
            <option value="">Pasirinkite skelbimo būseną</option>
            @if (Model.State == ProductState.Suspended)
            {
                <option value="@ProductState.Suspended" selected>Suspenduotas</option>
            }
            else
            {
                foreach (var state in Enum.GetValues(typeof(Skelbimu_sistema.Models.ProductState)))
                {
                    if (state.ToString() != "Suspended")
                    {
                        <option value="@state" selected="@(Model.State.Equals(state) ? "selected" : null)">
                            @MapToLithuanian(state.ToString()!)
                        </option>
                    }
                }
            }
        </select>
        <span asp-validation-for="State" class="text-danger"></span>
    </div>
    @if (Model.State == ProductState.Suspended)
    {
        <div class="form-group">
            <label class="control-label">Suspendavimo informacija</label>
            <div class="form-group">
                <input asp-for="SuspensionDate" class="form-control" disabled />
            </div>
            <div class="form-group">
                <label asp-for="SuspensionReason" class="control-label">Suspendavimo priežąstis</label>
                <input asp-for="SuspensionReason" class="form-control" disabled/>
            </div>
            <div class="form-group">
                <label asp-for="SuspensionReviewed" class="form-check-label">Suspendavimas peržiūrėtas</label>
                <input type="checkbox" asp-for="SuspensionReviewed" class="form-check-input" disabled />
            </div>
            <div class="form-group">
                <label asp-for="SuspensionCorrected" class="form-check-label">Skelbimas pataisytas</label>
                <input type="checkbox" asp-for="SuspensionCorrected" class="form-check-input" />
            </div>
        </div>
    }

    <br>
    <button type="submit" class="btn btn-primary">Saugoti</button>
    <a asp-controller="Product" asp-action="ViewInventory" class="btn btn-secondary">Grįžti atgal</a>
</form>

