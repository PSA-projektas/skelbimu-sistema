@model List<Product> // Update model to receive product list and userId

@{
    ViewData["Title"] = "Inventory";
    int currentUserId = (int)ViewData["UserId"];


}

@if ((int)ViewData["UserRole"] == 1) // Checking if User Role is not equal to 2 (Seller)
{
    <div class="text-center">
        <p>Norint peržiūrėti jūsų įtalpintus skelbimus turite turėti pardavėjo statusą, kurį galite įsigyti už 5$.</p>
        <form method="post" asp-controller="User" asp-action="PayUsingPaypal">
            <button type="submit" class="btn btn-success">Pirkti pardavėjo statusą su Paypal</button>
        </form>
    </div>

}
else
{
    <div class="text-center">
        <h1 class="display-4">Jūsų inventorius</h1>
    </div>

    <div class="container">
        <div class="row">
            @foreach (var product in Model)
            {
                // Check if the product was uploaded by the current user
                if (product.UserId == currentUserId)
                {
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="card h-100">
                            <img class="card-img-top" src="@product.ImageUrl" alt="@product.Name">
                            <div class="card-body">
                                <h4 class="card-title">@product.Name</h4>
                                <p class="card-text">@product.Description</p>
                                <p class="card-text">Kaina: $@product.Price</p>
                                <p class="card-text">Kategorija: @product.Category</p>
                                <p class="card-text">Būsena: @(product.State == ProductState.Active ? "Aktyvus" : "Rezervuotas")</p>

                            </div>
                            <div class="card-footer">
                                <button class="btn btn-danger" onclick="deleteProduct('@product.Id')">Naikinti</button>
                                <button class="btn btn-primary" onclick="editProduct('@product.Id')">Redaguoti</button>
                                <button class="btn btn-info" onclick="changeProductState('@product.Id')">Keisti būseną</button>
                            </div>

                        </div>
                    </div>
                }
            }
        </div>
    </div>
}


<script>


    function deleteProduct(productId) {
        if (confirm('Ar tikrai norite ištrinti šį produktą?')) {
            var token = $('input[name="__RequestVerificationToken"]').val(); // Get anti-forgery token
            $.ajax({
                url: '/skelbimas/Product/Delete/' + productId, // Update the URL to match the correct route
                type: 'POST',
                data: { id: productId, __RequestVerificationToken: token }, // Pass the anti-forgery token
                success: function (response) {
                    displaySuccessMessage('Produktas sėkmingai ištrintas!');
                    location.reload();
                },
                error: function (xhr, status, error) {
                    console.error('Klaida trinant produktą:', error);
                    displaySuccessMessage('Produktas neištrintas!');
                }
            });
        }
    }



    function editProduct(productId) {
        // Implement edit functionality here

        window.location.href = '/skelbimas/Product/Edit?id=' + productId;
    }

    function changeProductState(productId) {
        // Implement state change functionality here
        // Example: AJAX request to change product state
        $.ajax({
            url: '/skelbimas/Product/ChangeState',
            type: 'POST',
            data: { productId: productId },
            success: function (response) {
                // Handle success response
                console.log('Product state changed successfully.');
                displaySuccessMessage('Produkto būsena pakeista sėkmingai!');
                location.reload();
            },
            error: function (xhr, status, error) {
                // Handle error response
                console.error('Error changing product state:', error); // Log the error message
                console.error('Status:', status); // Log the status
                console.error('Response:', xhr.responseText); // Log the response text
            }
        });
    }
    // Function to display success message to user
    function displaySuccessMessage(message) {
        // You can implement this function to display the success message in your desired way
        // For example, you can show a notification, alert, or update a specific element on the page
        alert(message); // This is a simple example using alert
    }

</script>

